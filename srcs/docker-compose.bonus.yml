version:  "3.9"
services:
  mariadb:
    build: "requirements/mariadb"
    container_name: "mariadb"
    image: mariadb:inception
    networks:
      - back
    restart: always
    ulimits:
      nofile:
        soft: "100000"
        hard: "100000"
    env_file:
      .env

  wordpress:
    build: "requirements/wordpress"
    container_name: "wordpress"
    image: wordpress:inception
    depends_on:
      - mariadb
    networks:
      - back
      - front
    restart: always
    volumes:
      - www:/inception
    env_file:
      - .env
    environment:
      - BONUS=1

  nginx:
    build: "requirements/nginx"
    container_name: "nginx"
    image: nginx:inception
    depends_on:
      - adminer
      - wordpress
    networks:
      - front
    restart: always
    ports:
      - "443:443"
    volumes:
      - www:/inception
    environment:
      - BONUS=1

  redis:
    build: "requirements/bonus/redis"
    container_name: "redis"
    image: redis:inception
    depends_on:
      - wordpress
    networks:
      - back
    restart: always
    ports:
      - "6379:6379"
    env_file:
      - .env

  adminer:
    build: "requirements/bonus/adminer"
    container_name: "adminer"
    image: adminer:inception
    depends_on:
      - mariadb
    networks:
      - back
      - front
    restart: always
    volumes:
      - www:/inception

  vsftpd:
    build: "requirements/bonus/vsftpd"
    container_name: "vsftpd"
    image: vsftpd:inception
    depends_on:
      - mariadb
    networks:
      - back
      - front
    restart: always
    ports:
      - "20:21"
    volumes:
      - www:/inception
    env_file:
      - .env

  site:
    build: "requirements/bonus/site"
    container_name: "site"
    image: site:inception
    networks:
      - back
      - front
    restart: always
    volumes:
      - www:/inception

  cadvisor:
    build: "requirements/bonus/cadvisor"
    container_name: "cadvisor"
    image: cadvisor:inception
    networks:
      - back
      - front
    restart: always
    ports:
      - "8080:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - /cgroup:/cgroup:ro
    privileged: true
networks:
  back:
  front:
volumes:
  www:
    driver_opts:
      type: none
      device: /home/tnaton/data
      o: bind
